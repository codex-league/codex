import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'org.springframework.boot' version '3.0.5'
}

subprojects(){
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: "io.spring.dependency-management"
    apply plugin: "maven-publish"
    apply plugin: 'signing'

    group = 'pub.codex'
    version = '5.0.1'
    targetCompatibility = '17'
    sourceCompatibility = '17'

    dependencyManagement {
        imports {
            mavenBom SpringBootPlugin.BOM_COORDINATES
        }
    }

    repositories {
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }

    dependencies {
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    // 后面的都是打包的配置
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allJava
    }
    // 生成 javadoc jar
    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    def repoUrl = version.endsWith('SNAPSHOT') ? 'https://oss.sonatype.org/content/repositories/snapshots/' : 'https://oss.sonatype.org/service/local/staging/deploy/maven2'

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version
                from components.java
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = "Code-x"
                    description = "Code-X"
                    url = "https://github.com/codex-league/codex"
                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    developers {
                        developer {
                            id = "codex"
                            name = "codex"
                            email = "codex_team@163.com"
                        }
                    }
                    scm {
                        connection = "scm:git:https://github.com/codex-league/codex.git"
                        developerConnection = "scm:git:https://github.com/codex-league/codex.git"
                        url = "https://github.com/codex-league/codex"
                    }
                }
            }
        }
        repositories {
            maven {
                name 'sonatypeRepository'
                url repoUrl
                credentials {
                    username = System.getenv("NEXUS_USERNAME") // 获取环境变量
                    password = System.getenv("NEXUS_PASSWORD") // 获取环境变量
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}